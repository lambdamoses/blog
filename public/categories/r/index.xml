<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on From System to System</title>
    <link>/categories/r/</link>
    <description>Recent content in R on From System to System</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 30 Jul 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/r/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Code rendering reprex 2</title>
      <link>/2018/07/30/code-rendering-reprex-2/</link>
      <pubDate>Mon, 30 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/07/30/code-rendering-reprex-2/</guid>
      <description>See if the code rendering error is only in Rmd
# Something library(ggplot2)  For ggplot2
foo &amp;lt;- ggplot(iris, aes(Sepal.Length, Sepal.Width, color = Species)) + geom_point() foo  The example that works
# A proper comment x &amp;lt;- seq(0,1,0.02) x  for (i in 1:10) { cat(i, &amp;quot;\n&amp;quot;) }  The code did render properly in markdown, except there&amp;rsquo;s no code highlighting. Anyway, I don&amp;rsquo;t care, since I do want to run my code.</description>
    </item>
    
    <item>
      <title>Render error reprex</title>
      <link>/2018/07/30/render-error-reprex/</link>
      <pubDate>Mon, 30 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/07/30/render-error-reprex/</guid>
      <description>This is to demonstrate how code highlighting doesn’t work:
Comments not highlighted properly when I use message = FALSE
# something library(ggplot2) The foo is moved all the way down here
foo &amp;lt;- ggplot(iris, aes(Sepal.Length, Sepal.Width, color = Species)) + geom_point() foo Probably this has something to do with ggplot2
bar &amp;lt;- qplot(Sepal.Length, Sepal.Width, data = iris) bar There’s nothing wrong in this example:
# A proper comment x &amp;lt;- seq(0,1,0.</description>
    </item>
    
    <item>
      <title>Lorenz attractor animation (gganimate)</title>
      <link>/2018/07/29/lorenz-attractor-animation-gganimate/</link>
      <pubDate>Sun, 29 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/07/29/lorenz-attractor-animation-gganimate/</guid>
      <description>I have previously written about making the iconic Lorenz attractor animation with plotly; see that previous post for what the Lorenz system is. In the UseR! conference this year, Thomas Lin Pedersen presented presented the brand new version of gganimate which implements a grammar of animation, much like the grammar of graphics in ggplot2. In the older version by David Robinson, animation was made by adding and aes called frame. Now it’s just like adding geom_*s, scale_*s, stat_*s, and etc.</description>
    </item>
    
    <item>
      <title>Lorenz attractor animation (Plotly)</title>
      <link>/2018/07/28/lorenz-attractor-animation-plotly/</link>
      <pubDate>Sat, 28 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/07/28/lorenz-attractor-animation-plotly/</guid>
      <description>This is the first post in this blog.
## [1] &amp;quot;Hello World!&amp;quot; Once for a class assignment, we were asked to control the Lorenz system. The instructor recommended us to use MATLAB for assignments, but since I’m inexperienced in MATLAB, I decided to use R to do the assignments, and used the package plotly to make interactive 3D plots of phase portraits1 of the Lorenz system.</description>
    </item>
    
  </channel>
</rss>