<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on From System to System</title>
    <link>/categories/r/</link>
    <description>Recent content in R on From System to System</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 03 Mar 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/r/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Color palettes inspired by Islamic art</title>
      <link>/2019/03/03/color-palettes-inspired-by-islamic-art/</link>
      <pubDate>Sun, 03 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/03/03/color-palettes-inspired-by-islamic-art/</guid>
      <description>This post is about my new R package IslamicArt, which provides color palettes inspired by Islamic art. Disclaimer: While I accept the Islamic theology, ethnically speaking, I’m not from the Middle East, North Africa, Central Asia, South Asia, or Southeast Asia. However, I do deeply appreciate art and philosophy from what’s conventionally known as the Islamic world as well as Sufism. This R package is only about colors, not about theology.</description>
    </item>
    
    <item>
      <title>R blogs I follow</title>
      <link>/2019/03/02/r-blogs-i-follow/</link>
      <pubDate>Sat, 02 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/03/02/r-blogs-i-follow/</guid>
      <description>This page is about R resources. I also have a list of resources about dialogues between science and religion.
One of my favorite aspects of R is the vibrant R community. A way to learn from the community - new tools, cool efficient tricks, something to note about data analysis - is reading blog posts. Actually, I learnt parallel programming in R entirely from blog posts. These are the R blogs I follow:</description>
    </item>
    
    <item>
      <title>When principal component is not unique</title>
      <link>/2019/03/02/when-principal-component-is-not-unique/</link>
      <pubDate>Sat, 02 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/03/02/when-principal-component-is-not-unique/</guid>
      <description>This quarter, I’m TAing my adviser’s class on computational biology. Though I have taken this class a year ago and got an A, TAing really deepened my understanding of the course material, much of which I have long been using routinely without thinking, such as principal component analysis (PCA).
On the midterm, there was a problem asking students to give an example of 8 points in \(\mathbb{R}^2\) that do not have a unique 1 dimensional principal component projection.</description>
    </item>
    
    <item>
      <title>My Favorite and Least Favorite Aspects of R</title>
      <link>/2019/02/15/my-favorite-and-least-favorite-aspects-of-r/</link>
      <pubDate>Fri, 15 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/02/15/my-favorite-and-least-favorite-aspects-of-r/</guid>
      <description>In September 2015, as I started working in a lab that requires bioinformatics skills, I made a new friend whose name is R. Before then, the last time I programmed was in 2008, in C, and I didn&amp;rsquo;t do well in it. Then R has become my de facto mother tongue in programming. Three years later, I&amp;rsquo;m writing a package for single cell RNA-seq to be submitted to Bioconductor, and I have fixed bugs in other packages.</description>
    </item>
    
    <item>
      <title>Lorenz attractor animation (gganimate)</title>
      <link>/2018/07/29/lorenz-attractor-animation-gganimate/</link>
      <pubDate>Sun, 29 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/07/29/lorenz-attractor-animation-gganimate/</guid>
      <description>I have previously written about making the iconic Lorenz attractor animation with plotly; see that previous post for what the Lorenz system is. In the UseR! conference this year, Thomas Lin Pedersen presented the brand new version of gganimate which implements a grammar of animation, much like the grammar of graphics in ggplot2. In the older version by David Robinson, animation was made by adding an aes called frame. Now it’s just like adding geom_*s, scale_*s, stat_*s, and etc.</description>
    </item>
    
    <item>
      <title>Lorenz attractor animation (Plotly)</title>
      <link>/2018/07/28/lorenz-attractor-animation-plotly/</link>
      <pubDate>Sat, 28 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/07/28/lorenz-attractor-animation-plotly/</guid>
      <description>This is the first post in this blog.
## [1] &amp;quot;Hello World!&amp;quot; Once for a class assignment, we were asked to control the Lorenz system. The instructor recommended us to use MATLAB for assignments, but since I’m inexperienced in MATLAB, I decided to use R to do the assignments, and used the package plotly to make interactive 3D plots of phase portraits1 of the Lorenz system.</description>
    </item>
    
  </channel>
</rss>